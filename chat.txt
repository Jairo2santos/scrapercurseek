Estructura de la pagina 

( Õ°üëÅÔ∏è‚ÄØÕú ñ Õ°üëÅÔ∏è)

async function goToNextPage(page) {
    try {
        await page.click('.pagination .page-item:not(.disabled) > .page-link:contains(">")'); // Modificado para usar el bot√≥n correcto
        return true;
    } catch (error) {
        return false;
    }
}

////

import puppeteer from "puppeteer";
import fs from "fs";

async function GetCursos() {
    const browser = await puppeteer.launch({
        headless: false,
        slowMo: 500,
    });

    const page = await browser.newPage();

    // Desactivar la carga de im√°genes para acelerar la navegaci√≥n
    await page.setRequestInterception(true);
    page.on('request', (req) => {
        if (req.resourceType() === 'image') {
            req.abort();
        } else {
            req.continue();
        }
    });

    await page.goto("https://sceu.frba.utn.edu.ar/e-learning/listado/Categorias[administracion-de-empresas]", { waitUntil: 'networkidle0', timeout: 60000 });

    const allCourses = [];

    let hasNextPage = true;
    let pageCount = 0; // Contador de p√°ginas
    const maxPages = 5; // Limitar a 5 p√°ginas

    while (hasNextPage && pageCount < maxPages) {
        const coursesOnPage = await extractCourses(page);
        allCourses.push(...coursesOnPage);

        hasNextPage = await goToNextPage(page);
        pageCount++;
    }

    await browser.close();

    // Convertir allCourses en un archivo JSON
    fs.writeFileSync('courses.json', JSON.stringify(allCourses, null, 2));
}

async function extractCourses(page) {
    return await page.$$eval('.MuiCard-root', cards => {
        return cards.map(card => {
            const title = card.querySelector('.card-title').textContent;
            const imageUrl = card.querySelector('.MuiCardMedia-root img').src;
            const description = card.querySelector('.card-content').textContent;
            const duration = card.querySelector('.MuiSvgIcon-root + span').textContent;
            return { title, imageUrl, description, duration };
        });
    });
}

async function goToNextPage(page) {
    try {
        await page.click('.page-item:not(.disabled) > .page-link[rel="next"]');
        await page.waitForNavigation({ waitUntil: 'networkidle0', timeout: 60000 });
        return true;
    } catch (error) {
        return false;
    }
}

GetCursos();